# Generated by Django 2.0.3 on 2018-04-23 09:18

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('actor_director', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(max_length=20, unique=True, verbose_name='장르')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naver_movie_id', models.CharField(blank=True, max_length=10, null=True, unique=True, verbose_name='네이버 영화 아이디')),
                ('title_ko', models.CharField(blank=True, max_length=100, verbose_name='영화제목(한글)')),
                ('title_en', models.CharField(blank=True, max_length=100, verbose_name='영화제목(영문)')),
                ('title_slug', models.SlugField(blank=True, null=True)),
                ('movie_created_date', models.IntegerField(blank=True, null=True, verbose_name='제작년도')),
                ('d_day', models.DateField(blank=True, max_length=50, null=True, verbose_name='개봉일')),
                ('film_rate', models.CharField(blank=True, choices=[('all', '전체 관람가'), ('12', '12세 관람가'), ('15', '15세 관람가'), ('18', '18세 관람가'), ('limit', '청소년 관람불가'), ('ETC', '기타')], max_length=10, verbose_name='상영 등급')),
                ('running_time', models.IntegerField(blank=True, null=True, verbose_name='상영시간')),
                ('intro', models.TextField(blank=True, verbose_name='줄거리')),
                ('nation', models.CharField(blank=True, choices=[('KR', '한국'), ('JP', '일본'), ('CH', '중국'), ('US', '미국'), ('HK', '홍콩'), ('GB', '영국'), ('FR', '프랑스'), ('GM', '독일'), ('IT', '이탈리아'), ('TH', '태국'), ('ETC', '기타')], max_length=5, verbose_name='국가')),
                ('ticketing_rate', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=5, null=True, validators=[django.core.validators.MaxValueValidator(100)], verbose_name='예매율')),
                ('audience', models.IntegerField(blank=True, null=True, verbose_name='누적관객수')),
                ('poster_image', models.ImageField(blank=True, upload_to='poster', verbose_name='포스터 이미지')),
                ('poster_image_m', models.ImageField(blank=True, upload_to='poster', verbose_name='중간 포스터 이미지')),
                ('poster_image_s', models.ImageField(blank=True, upload_to='poster', verbose_name='작은 포스터 이미지')),
                ('poster_image_my_x3', models.ImageField(blank=True, upload_to='poster/ios/my', verbose_name='IOS mypage x3')),
                ('poster_image_box_x3', models.ImageField(blank=True, upload_to='poster/ios/box', verbose_name='IOS box office x3')),
                ('poster_image_eval_x3', models.ImageField(blank=True, upload_to='poster/ios/eval', verbose_name='IOS eval x3')),
                ('rating_avg', models.DecimalField(blank=True, decimal_places=1, default=0.0, max_digits=2, validators=[django.core.validators.MaxValueValidator(5)], verbose_name='평점평균')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
            ],
            options={
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='MovieToGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='genre_movie_list', to='movie.Genre')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movie_genre_list', to='movie.Movie')),
            ],
        ),
        migrations.CreateModel(
            name='MovieToMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('1', '감독'), ('2', '주연'), ('3', '조연'), ('4', '단역')], max_length=5, verbose_name='구성원 분류')),
                ('role_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='배역')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='casting_movie_list', to='actor_director.Member')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movie_member_list', to='movie.Movie')),
            ],
        ),
        migrations.CreateModel(
            name='StillCut',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('still_img', models.ImageField(blank=True, upload_to='still_cut', verbose_name='스틸 이미지')),
                ('still_img_x3', models.ImageField(blank=True, upload_to='still_cut/ios', verbose_name='아이폰용 스틸 이미지')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('movie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='still_cuts', to='movie.Movie', verbose_name='영화')),
            ],
            options={
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=20, unique=True, verbose_name='태그')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
            ],
        ),
        migrations.CreateModel(
            name='TrailerYouTube',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('youtube_id', models.CharField(max_length=20, verbose_name='YouTube ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='제목')),
                ('url_thumbnail', models.URLField(blank=True, help_text='this image is 320px wide and 180px tall.', verbose_name='커버 이미지 URL')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('movie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trailer_youtube', to='movie.Movie', verbose_name='영화')),
            ],
            options={
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='UserToMovie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_want_movie', models.BooleanField(default=False, verbose_name='보고싶은 영화')),
                ('user_watched_movie', models.BooleanField(default=False, verbose_name='본 영화')),
                ('rating', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True, verbose_name='평점')),
                ('comment', models.TextField(blank=True, verbose_name='코멘트')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interested_user_list', to='movie.Movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interesting_movie_list', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-pk'],
            },
        ),
        migrations.AddField(
            model_name='movie',
            name='genre',
            field=models.ManyToManyField(blank=True, through='movie.MovieToGenre', to='movie.Genre'),
        ),
        migrations.AddField(
            model_name='movie',
            name='members',
            field=models.ManyToManyField(blank=True, through='movie.MovieToMember', to='actor_director.Member'),
        ),
        migrations.AddField(
            model_name='movie',
            name='tag',
            field=models.ManyToManyField(blank=True, to='movie.Tag'),
        ),
        migrations.AddField(
            model_name='movie',
            name='user',
            field=models.ManyToManyField(blank=True, through='movie.UserToMovie', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='usertomovie',
            unique_together={('user', 'movie')},
        ),
    ]
